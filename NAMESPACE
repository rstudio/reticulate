# Generated by roxygen2: do not edit by hand

S3method("!=",python.builtin.object)
S3method("$",python.builtin.dict)
S3method("$",python.builtin.module)
S3method("$",python.builtin.object)
S3method("$<-",python.builtin.dict)
S3method("$<-",python.builtin.object)
S3method("<",python.builtin.object)
S3method("<=",python.builtin.object)
S3method("==",python.builtin.object)
S3method(">",python.builtin.object)
S3method(">=",python.builtin.object)
S3method("[",python.builtin.dict)
S3method("[",python.builtin.object)
S3method("[<-",python.builtin.dict)
S3method("[[",python.builtin.dict)
S3method("[[",python.builtin.object)
S3method("[[<-",python.builtin.dict)
S3method("[[<-",python.builtin.object)
S3method(.DollarNames,python.builtin.module)
S3method(.DollarNames,python.builtin.object)
S3method(as.array,numpy.ndarray)
S3method(as.character,python.builtin.object)
S3method(as.double,numpy.ndarray)
S3method(as.environment,python.builtin.object)
S3method(as.matrix,numpy.ndarray)
S3method(as.vector,numpy.ndarray)
S3method(dim,pandas.core.frame.DataFrame)
S3method(dim,pandas.core.series.Series)
S3method(dim,scipy.sparse.csc.csc_matrix)
S3method(length,numpy.ndarray)
S3method(length,pandas.core.frame.DataFrame)
S3method(length,pandas.core.series.Series)
S3method(length,python.builtin.dict)
S3method(length,python.builtin.list)
S3method(length,python.builtin.tuple)
S3method(length,scipy.sparse.csc.csc_matrix)
S3method(names,python.builtin.module)
S3method(names,python.builtin.object)
S3method(plot,numpy.ndarray)
S3method(print,py_config)
S3method(print,py_wrapper)
S3method(print,python.builtin.object)
S3method(py_str,default)
S3method(py_str,python.builtin.bytearray)
S3method(py_str,python.builtin.dict)
S3method(py_str,python.builtin.list)
S3method(py_str,python.builtin.module)
S3method(py_str,python.builtin.object)
S3method(py_str,python.builtin.tuple)
S3method(py_to_r,collections.OrderedDict)
S3method(py_to_r,datetime.date)
S3method(py_to_r,datetime.datetime)
S3method(py_to_r,default)
S3method(py_to_r,numpy.ndarray)
S3method(py_to_r,pandas.core.categorical.Categorical)
S3method(py_to_r,pandas.core.frame.DataFrame)
S3method(py_to_r,pandas.core.series.Series)
S3method(py_to_r,scipy.sparse.csc.csc_matrix)
S3method(py_to_r_wrapper,default)
S3method(r_to_py,Date)
S3method(r_to_py,POSIXt)
S3method(r_to_py,data.frame)
S3method(r_to_py,default)
S3method(r_to_py,dgCMatrix)
S3method(r_to_py,factor)
S3method(str,py_config)
S3method(str,python.builtin.module)
S3method(str,python.builtin.object)
S3method(summary,pandas.core.frame.DataFrame)
S3method(summary,pandas.core.series.Series)
S3method(summary,python.builtin.object)
S3method(with,python.builtin.object)
export("%as%")
export(array_reshape)
export(as_iterator)
export(conda_binary)
export(conda_create)
export(conda_install)
export(conda_list)
export(conda_remove)
export(conda_version)
export(dict)
export(eng_python)
export(find_conda)
export(get_virtualenv)
export(import)
export(import_builtins)
export(import_from_path)
export(import_main)
export(iter_next)
export(iterate)
export(np_array)
export(py)
export(py_available)
export(py_call)
export(py_capture_output)
export(py_clear_last_error)
export(py_config)
export(py_config_error_message)
export(py_del_item)
export(py_dict)
export(py_discover_config)
export(py_eval)
export(py_func)
export(py_function_docs)
export(py_function_wrapper)
export(py_get_attr)
export(py_get_item)
export(py_has_attr)
export(py_help)
export(py_id)
export(py_install)
export(py_is_null_xptr)
export(py_iterator)
export(py_last_error)
export(py_len)
export(py_list_attributes)
export(py_load_object)
export(py_module_available)
export(py_numpy_available)
export(py_run_file)
export(py_run_string)
export(py_save_object)
export(py_set_attr)
export(py_set_item)
export(py_set_seed)
export(py_str)
export(py_suppress_warnings)
export(py_to_r)
export(py_to_r_wrapper)
export(py_unicode)
export(py_validate_xptr)
export(py_versions_windows)
export(r_to_py)
export(register_class_filter)
export(register_help_topics)
export(register_module_help_handler)
export(register_suppress_warnings_handler)
export(repl_python)
export(source_python)
export(tuple)
export(use_condaenv)
export(use_python)
export(use_virtualenv)
export(virtualenv_create)
export(virtualenv_install)
export(virtualenv_list)
export(virtualenv_remove)
export(virtualenv_root)
importFrom(Matrix,sparseMatrix)
importFrom(Rcpp,evalCpp)
importFrom(graphics,plot)
importFrom(jsonlite,fromJSON)
importFrom(utils,.DollarNames)
importFrom(utils,download.file)
importFrom(utils,file_test)
importFrom(utils,head)
importFrom(utils,packageVersion)
importFrom(utils,str)
useDynLib(reticulate, .registration = TRUE)
